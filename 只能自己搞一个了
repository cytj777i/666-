-- 完美游泳飞行脚本 - 模拟真实游泳机制
-- 完全模拟Roblox游泳系统实现飞行

if not game:IsLoaded() then
    game.Loaded:Wait()
end

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
if not player then return end

-- 获取角色
local character = player.Character
if not character then
    character = player.CharacterAdded:Wait()
end

local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")

-- 飞行状态
local flying = false
local currentSpeed = 16 -- 真实游泳速度
local flightConnection
local swimController
local waterPart

-- 创建游泳控制器
local function setupSwimController()
    -- 获取或创建游泳控制器
    swimController = humanoid:FindFirstChildOfClass("SwimController")
    if not swimController then
        swimController = Instance.new("SwimController")
        swimController.Parent = humanoid
    end
    swimController.Enabled = true
end

-- 创建水环境
local function createWaterEnvironment()
    if waterPart then
        waterPart:Destroy()
    end
    
    -- 创建隐形水区域
    waterPart = Instance.new("Part")
    waterPart.Name = "SwimWater"
    waterPart.Size = Vector3.new(100, 50, 100)
    waterPart.Position = rootPart.Position
    waterPart.Anchored = true
    waterPart.CanCollide = false
    waterPart.Transparency = 1
    waterPart.Parent = workspace
    
    -- 添加水体特性
    local waterForce = Instance.new("VectorForce")
    waterForce.Force = Vector3.new(0, 196.2, 0) -- 模拟浮力
    waterForce.RelativeTo = Enum.ActuatorRelativeTo.World
    waterForce.ApplyAtCenterOfMass = true
    waterForce.Attachment0 = Instance.new("Attachment")
    waterForce.Attachment0.Parent = rootPart
    waterForce.Parent = waterPart
    
    return waterPart
end

-- 强制进入游泳状态
local function enterSwimState()
    if not humanoid then return end
    
    -- 设置游泳状态
    humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
    
    -- 启用游泳
    humanoid.Swim = true
    
    -- 设置游泳控制器
    setupSwimController()
    
    -- 确保角色在水中
    if swimController then
        swimController.waterLevel = rootPart.Position.Y + 10
    end
end

-- 创建简单GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "SwimFlightGUI"
screenGui.Parent = player.PlayerGui

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 200, 0, 120)
frame.Position = UDim2.new(0, 10, 0, 10)
frame.BackgroundColor3 = Color3.fromRGB(30, 40, 50)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true
frame.Parent = screenGui

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 8)
corner.Parent = frame

local statusLabel = Instance.new("TextLabel")
statusLabel.Size = UDim2.new(1, -10, 0, 25)
statusLabel.Position = UDim2.new(0, 5, 0, 5)
statusLabel.BackgroundTransparency = 1
statusLabel.Text = "游泳: 关闭 (F)"
statusLabel.TextColor3 = Color3.fromRGB(255, 80, 80)
statusLabel.Font = Enum.Font.GothamBold
statusLabel.TextSize = 12
statusLabel.TextXAlignment = Enum.TextXAlignment.Left
statusLabel.Parent = frame

local speedLabel = Instance.new("TextLabel")
speedLabel.Size = UDim2.new(1, -10, 0, 25)
speedLabel.Position = UDim2.new(0, 5, 0, 30)
speedLabel.BackgroundTransparency = 1
speedLabel.Text = "速度: " .. currentSpeed
speedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
speedLabel.Font = Enum.Font.Gotham
speedLabel.TextSize = 12
speedLabel.TextXAlignment = Enum.TextXAlignment.Left
speedLabel.Parent = frame

local toggleBtn = Instance.new("TextButton")
toggleBtn.Size = UDim2.new(0, 80, 0, 25)
toggleBtn.Position = UDim2.new(0.5, -40, 1, -30)
toggleBtn.BackgroundColor3 = Color3.fromRGB(220, 80, 80)
toggleBtn.Text = "开始游泳"
toggleBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleBtn.Font = Enum.Font.GothamBold
toggleBtn.TextSize = 12
toggleBtn.Parent = frame

local btnCorner = Instance.new("UICorner")
btnCorner.CornerRadius = UDim.new(0, 6)
btnCorner.Parent = toggleBtn

-- 游泳飞行系统
local function startSwimFlight()
    if flying then return end
    
    flying = true
    statusLabel.Text = "游泳: 开启 (F)"
    statusLabel.TextColor3 = Color3.fromRGB(80, 255, 80)
    toggleBtn.Text = "停止游泳"
    toggleBtn.BackgroundColor3 = Color3.fromRGB(80, 220, 80)
    
    -- 创建水环境
    createWaterEnvironment()
    
    -- 进入游泳状态
    enterSwimState()
    
    -- 游泳飞行主循环
    flightConnection = RunService.Heartbeat:Connect(function()
        if not flying or not character or not rootPart then return end
        
        -- 保持游泳状态
        enterSwimState()
        
        -- 更新水区域位置
        if waterPart then
            waterPart.Position = rootPart.Position
        end
        
        -- 模拟游泳移动
        local moveDirection = Vector3.new(0, 0, 0)
        local camera = workspace.CurrentCamera
        
        -- 前后移动 (W/S)
        if UserInputService:IsKeyDown(Enum.KeyCode.W) then
            local lookVector = camera.CFrame.LookVector
            moveDirection = moveDirection + Vector3.new(lookVector.X, 0, lookVector.Z)
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.S) then
            local lookVector = camera.CFrame.LookVector
            moveDirection = moveDirection - Vector3.new(lookVector.X, 0, lookVector.Z)
        end
        
        -- 左右移动 (A/D)
        if UserInputService:IsKeyDown(Enum.KeyCode.A) then
            moveDirection = moveDirection - camera.CFrame.RightVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.D) then
            moveDirection = moveDirection + camera.CFrame.RightVector
        end
        
        -- 上下移动 (E/Q)
        if UserInputService:IsKeyDown(Enum.KeyCode.E) then
            moveDirection = moveDirection + Vector3.new(0, 1, 0)
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.Q) then
            moveDirection = moveDirection + Vector3.new(0, -1, 0)
        end
        
        -- 应用移动 - 使用Roblox游泳系统的移动方式
        if moveDirection.Magnitude > 0 then
            -- 模拟游泳的速度和阻力
            local swimVelocity = moveDirection.Unit * currentSpeed
            
            -- 使用BodyVelocity模拟游泳移动
            local bodyVelocity = rootPart:FindFirstChild("SwimVelocity") or Instance.new("BodyVelocity")
            bodyVelocity.Name = "SwimVelocity"
            bodyVelocity.Velocity = swimVelocity
            bodyVelocity.MaxForce = Vector3.new(4000, 4000, 4000)
            bodyVelocity.P = 1000
            bodyVelocity.Parent = rootPart
            
            -- 保持角色朝向
            local bodyGyro = rootPart:FindFirstChild("SwimGyro") or Instance.new("BodyGyro")
            bodyGyro.Name = "SwimGyro"
            bodyGyro.MaxTorque = Vector3.new(0, 0, 0) -- 不强制旋转
            bodyGyro.Parent = rootPart
        else
            -- 停止移动时清除速度
            local bodyVelocity = rootPart:FindFirstChild("SwimVelocity")
            if bodyVelocity then
                bodyVelocity.Velocity = Vector3.new(0, 0, 0)
            end
        end
        
        -- 持续更新游泳控制器
        if swimController then
            swimController.waterLevel = rootPart.Position.Y + 5
        end
    end)
    
    print("游泳飞行已开启 - 使用WASD移动，QE升降")
end

local function stopSwimFlight()
    if not flying then return end
    
    flying = false
    statusLabel.Text = "游泳: 关闭 (F)"
    statusLabel.TextColor3 = Color3.fromRGB(255, 80, 80)
    toggleBtn.Text = "开始游泳"
    toggleBtn.BackgroundColor3 = Color3.fromRGB(220, 80, 80)
    
    -- 恢复正常状态
    if humanoid then
        humanoid:ChangeState(Enum.HumanoidStateType.Running)
        humanoid.Swim = false
    end
    
    -- 清理游泳控制器
    if swimController then
        swimController.Enabled = false
    end
    
    -- 清理水环境
    if waterPart then
        waterPart:Destroy()
        waterPart = nil
    end
    
    -- 清理物理对象
    local bodyVelocity = rootPart:FindFirstChild("SwimVelocity")
    if bodyVelocity then
        bodyVelocity:Destroy()
    end
    
    local bodyGyro = rootPart:FindFirstChild("SwimGyro")
    if bodyGyro then
        bodyGyro:Destroy()
    end
    
    -- 清理飞行连接
    if flightConnection then
        flightConnection:Disconnect()
        flightConnection = nil
    end
    
    print("游泳飞行已关闭")
end

local function toggleSwimFlight()
    if flying then
        stopSwimFlight()
    else
        startSwimFlight()
    end
end

-- 速度控制
local function changeSpeed(amount)
    currentSpeed = math.clamp(currentSpeed + amount, 8, 32)
    speedLabel.Text = "速度: " .. currentSpeed
end

-- 连接GUI事件
toggleBtn.MouseButton1Click:Connect(toggleSwimFlight)

-- 键盘控制
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    if input.KeyCode == Enum.KeyCode.F then
        toggleSwimFlight()
    elseif input.KeyCode == Enum.KeyCode.Equals then
        changeSpeed(2)
    elseif input.KeyCode == Enum.KeyCode.Minus then
        changeSpeed(-2)
    end
end)

-- 角色重生处理
player.CharacterAdded:Connect(function(newCharacter)
    character = newCharacter
    humanoid = character:WaitForChild("Humanoid")
    rootPart = character:WaitForChild("HumanoidRootPart")
    
    stopSwimFlight()
end)

-- 脚本卸载清理
game:GetService("Players").PlayerRemoving:Connect(function(leavingPlayer)
    if leavingPlayer == player then
        stopSwimFlight()
        if screenGui then
            screenGui:Destroy()
        end
    end
end)

print("====================================")
print("游泳飞行脚本加载成功!")
print("按 F 键 - 开启/关闭游泳飞行")
print("WASD - 前后左右移动")
print("Q/E - 上升/下降")
print("+/- - 调整游泳速度")
print("====================================")