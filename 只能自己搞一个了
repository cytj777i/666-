-- 伪装游泳飞行脚本 - 绕过反作弊系统
-- 完整可用的飞行脚本

if not game:IsLoaded() then
    game.Loaded:Wait()
end

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer
if not player then return end

-- 安全获取角色
local character = player.Character
if not character then
    character = player.CharacterAdded:Wait()
end

local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")

-- 飞行状态
local flying = false
local currentSpeed = 25
local flightConnection
local fakeWaterPart

-- 创建完整GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "SwimFlightGUI"
screenGui.Parent = player.PlayerGui

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 280, 0, 180)
mainFrame.Position = UDim2.new(0, 20, 0, 20)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 40, 50)
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Parent = screenGui

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 10)
corner.Parent = mainFrame

-- 标题
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 30)
title.Position = UDim2.new(0, 0, 0, 0)
title.BackgroundColor3 = Color3.fromRGB(20, 30, 40)
title.BorderSizePixel = 0
title.Text = "游泳控制系统"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.GothamBold
title.TextSize = 14
title.Parent = mainFrame

local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 10)
titleCorner.Parent = title

-- 状态显示
local statusLabel = Instance.new("TextLabel")
statusLabel.Size = UDim2.new(1, -20, 0, 25)
statusLabel.Position = UDim2.new(0, 10, 0, 40)
statusLabel.BackgroundTransparency = 1
statusLabel.Text = "游泳状态: 关闭"
statusLabel.TextColor3 = Color3.fromRGB(255, 80, 80)
statusLabel.Font = Enum.Font.Gotham
statusLabel.TextSize = 13
statusLabel.TextXAlignment = Enum.TextXAlignment.Left
statusLabel.Parent = mainFrame

-- 速度显示
local speedLabel = Instance.new("TextLabel")
speedLabel.Size = UDim2.new(1, -20, 0, 25)
speedLabel.Position = UDim2.new(0, 10, 0, 65)
speedLabel.BackgroundTransparency = 1
speedLabel.Text = "游泳速度: " .. currentSpeed
speedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
speedLabel.Font = Enum.Font.Gotham
speedLabel.TextSize = 13
speedLabel.TextXAlignment = Enum.TextXAlignment.Left
speedLabel.Parent = mainFrame

-- 速度控制按钮
local speedDownBtn = Instance.new("TextButton")
speedDownBtn.Size = UDim2.new(0, 25, 0, 25)
speedDownBtn.Position = UDim2.new(0, 10, 0, 95)
speedDownBtn.BackgroundColor3 = Color3.fromRGB(50, 70, 90)
speedDownBtn.Text = "-"
speedDownBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
speedDownBtn.Font = Enum.Font.GothamBold
speedDownBtn.TextSize = 14
speedDownBtn.Parent = mainFrame

local speedUpBtn = Instance.new("TextButton")
speedUpBtn.Size = UDim2.new(0, 25, 0, 25)
speedUpBtn.Position = UDim2.new(0, 45, 0, 95)
speedUpBtn.BackgroundColor3 = Color3.fromRGB(50, 70, 90)
speedUpBtn.Text = "+"
speedUpBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
speedUpBtn.Font = Enum.Font.GothamBold
speedUpBtn.TextSize = 14
speedUpBtn.Parent = mainFrame

-- 速度值显示
local speedValue = Instance.new("TextLabel")
speedValue.Size = UDim2.new(0, 60, 0, 25)
speedValue.Position = UDim2.new(0, 80, 0, 95)
speedValue.BackgroundTransparency = 1
speedValue.Text = currentSpeed
speedValue.TextColor3 = Color3.fromRGB(200, 220, 255)
speedValue.Font = Enum.Font.Gotham
speedValue.TextSize = 13
speedValue.Parent = mainFrame

-- 开关按钮
local toggleBtn = Instance.new("TextButton")
toggleBtn.Size = UDim2.new(0, 100, 0, 30)
toggleBtn.Position = UDim2.new(0.5, -50, 1, -40)
toggleBtn.BackgroundColor3 = Color3.fromRGB(220, 80, 80)
toggleBtn.Text = "开始游泳"
toggleBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleBtn.Font = Enum.Font.GothamBold
toggleBtn.TextSize = 12
toggleBtn.Parent = mainFrame

local btnCorner = Instance.new("UICorner")
btnCorner.CornerRadius = UDim.new(0, 6)
btnCorner.Parent = toggleBtn

-- 热键提示
local hotkeyLabel = Instance.new("TextLabel")
hotkeyLabel.Size = UDim2.new(1, -20, 0, 35)
hotkeyLabel.Position = UDim2.new(0, 10, 0, 125)
hotkeyLabel.BackgroundTransparency = 1
hotkeyLabel.Text = "热键: F - 游泳开关\nWASD - 移动, Q/E - 升降"
hotkeyLabel.TextColor3 = Color3.fromRGB(180, 200, 220)
hotkeyLabel.Font = Enum.Font.Gotham
hotkeyLabel.TextSize = 10
hotkeyLabel.TextXAlignment = Enum.TextXAlignment.Left
hotkeyLabel.Parent = mainFrame

-- 创建伪装水环境
local function createFakeWater()
    if fakeWaterPart then
        fakeWaterPart:Destroy()
    end
    
    fakeWaterPart = Instance.new("Part")
    fakeWaterPart.Name = "Water"
    fakeWaterPart.Size = Vector3.new(50, 20, 50)
    fakeWaterPart.Position = rootPart.Position + Vector3.new(0, -5, 0)
    fakeWaterPart.Anchored = true
    fakeWaterPart.CanCollide = false
    fakeWaterPart.Transparency = 1
    fakeWaterPart.Parent = workspace
    
    -- 添加水体材质
    local waterMaterial = Instance.new("SpecialMesh")
    waterMaterial.MeshType = Enum.MeshType.FileMesh
    waterMaterial.MeshId = "rbxassetid://10888342935" -- 水效果
    waterMaterial.Parent = fakeWaterPart
    
    -- 添加游泳触发器
    local touchPart = Instance.new("Part")
    touchPart.Name = "TouchPart"
    touchPart.Size = Vector3.new(5, 5, 5)
    touchPart.Position = rootPart.Position
    touchPart.Anchored = true
    touchPart.CanCollide = false
    touchPart.Transparency = 1
    touchPart.Parent = workspace
    
    -- 连接触摸事件
    touchPart.Touched:Connect(function()
        if humanoid then
            humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
        end
    end)
    
    return fakeWaterPart, touchPart
end

-- 强制游泳状态
local function forceSwimState()
    if not humanoid then return end
    
    -- 强制设置为游泳状态
    humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
    
    -- 启用游泳控制器
    local swimController = humanoid:FindFirstChildOfClass("SwimController")
    if swimController then
        swimController.Enabled = true
    end
    
    -- 设置游泳属性
    humanoid.Swim = true
end

-- 游泳飞行系统
local function startSwimFlight()
    if flying then return end
    
    flying = true
    statusLabel.Text = "游泳状态: 游泳中"
    statusLabel.TextColor3 = Color3.fromRGB(80, 255, 80)
    toggleBtn.Text = "停止游泳"
    toggleBtn.BackgroundColor3 = Color3.fromRGB(80, 220, 80)
    
    -- 创建伪装水环境
    local waterPart, touchPart = createFakeWater()
    
    -- 强制进入游泳状态
    forceSwimState()
    
    -- 游泳飞行主循环
    flightConnection = RunService.Heartbeat:Connect(function()
        if not flying or not character or not rootPart then
            return
        end
        
        -- 持续保持游泳状态
        forceSwimState()
        
        -- 计算移动方向
        local moveDirection = Vector3.new(0, 0, 0)
        local camera = workspace.CurrentCamera
        
        -- 前后移动
        if UserInputService:IsKeyDown(Enum.KeyCode.W) then
            local lookVector = camera.CFrame.LookVector
            moveDirection = moveDirection + Vector3.new(lookVector.X, lookVector.Y, lookVector.Z)
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.S) then
            local lookVector = camera.CFrame.LookVector
            moveDirection = moveDirection - Vector3.new(lookVector.X, lookVector.Y, lookVector.Z)
        end
        
        -- 左右移动
        if UserInputService:IsKeyDown(Enum.KeyCode.A) then
            moveDirection = moveDirection - camera.CFrame.RightVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.D) then
            moveDirection = moveDirection + camera.CFrame.RightVector
        end
        
        -- 上下移动
        if UserInputService:IsKeyDown(Enum.KeyCode.E) then
            moveDirection = moveDirection + Vector3.new(0, 1, 0)
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.Q) then
            moveDirection = moveDirection + Vector3.new(0, -1, 0)
        end
        
        -- 应用移动 - 使用CFrame直接移动
        if moveDirection.Magnitude > 0 then
            local moveAmount = moveDirection.Unit * currentSpeed * 0.08
            local newPosition = rootPart.Position + moveAmount
            
            -- 方法1: 直接设置位置
            rootPart.CFrame = CFrame.new(newPosition)
            
            -- 方法2: 使用TweenService作为备份
            local tween = TweenService:Create(
                rootPart, 
                TweenInfo.new(0.05, Enum.EasingStyle.Linear), 
                {CFrame = CFrame.new(newPosition)}
            )
            tween:Play()
            
            -- 更新水区域位置
            if waterPart then
                waterPart.Position = rootPart.Position + Vector3.new(0, -5, 0)
            end
            if touchPart then
                touchPart.Position = rootPart.Position
            end
        end
    end)
    
    print("游泳飞行已开启 - 使用WASD移动，QE升降")
end

local function stopSwimFlight()
    if not flying then return end
    
    flying = false
    statusLabel.Text = "游泳状态: 关闭"
    statusLabel.TextColor3 = Color3.fromRGB(255, 80, 80)
    toggleBtn.Text = "开始游泳"
    toggleBtn.BackgroundColor3 = Color3.fromRGB(220, 80, 80)
    
    -- 恢复正常状态
    if humanoid then
        humanoid:ChangeState(Enum.HumanoidStateType.Running)
        humanoid.Swim = false
    end
    
    -- 清理水环境
    if fakeWaterPart then
        fakeWaterPart:Destroy()
        fakeWaterPart = nil
    end
    
    -- 清理飞行连接
    if flightConnection then
        flightConnection:Disconnect()
        flightConnection = nil
    end
    
    print("游泳飞行已关闭")
end

local function toggleSwimFlight()
    if flying then
        stopSwimFlight()
    else
        startSwimFlight()
    end
end

-- 速度控制
local function updateSpeed(change)
    currentSpeed = math.clamp(currentSpeed + change, 10, 50)
    speedLabel.Text = "游泳速度: " .. currentSpeed
    speedValue.Text = currentSpeed
end

-- 连接GUI事件
toggleBtn.MouseButton1Click:Connect(toggleSwimFlight)
speedUpBtn.MouseButton1Click:Connect(function()
    updateSpeed(5)
end)
speedDownBtn.MouseButton1Click:Connect(function()
    updateSpeed(-5)
end)

-- 键盘控制
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    if input.KeyCode == Enum.KeyCode.F then
        toggleSwimFlight()
    elseif input.KeyCode == Enum.KeyCode.Equals then
        updateSpeed(5)
    elseif input.KeyCode == Enum.KeyCode.Minus then
        updateSpeed(-5)
    elseif input.KeyCode == Enum.KeyCode.R then
        -- 重置位置
        if character and rootPart then
            rootPart.CFrame = CFrame.new(rootPart.Position + Vector3.new(0, 10, 0))
        end
    end
end)

-- 角色重生处理
player.CharacterAdded:Connect(function(newCharacter)
    -- 等待新角色完全加载
    repeat
        RunService.Heartbeat:Wait()
        character = newCharacter
    until character:FindFirstChild("Humanoid") and character:FindFirstChild("HumanoidRootPart")
    
    humanoid = character:WaitForChild("Humanoid")
    rootPart = character:WaitForChild("HumanoidRootPart")
    
    stopSwimFlight()
end)

-- 脚本卸载清理
game:GetService("Players").PlayerRemoving:Connect(function(leavingPlayer)
    if leavingPlayer == player then
        stopSwimFlight()
        if screenGui then
            screenGui:Destroy()
        end
    end
end)

-- 防卡死保护
spawn(function()
    while true do
        wait(5)
        if flying and rootPart then
            -- 确保角色不会卡住
            local currentPos = rootPart.Position
            if currentPos.Y < -100 then
                rootPart.CFrame = CFrame.new(0, 50, 0)
                print("防卡死: 角色位置已重置")
            end
        end
    end
end)

print("====================================")
print("伪装游泳飞行脚本加载成功!")
print("按 F 键 - 开启/关闭游泳飞行")
print("WASD - 前后左右移动")
print("Q/E - 下降/上升")
print("+/- - 增加/减少游泳速度")
print("R - 重置位置")
print("====================================")